{
  "contractName": "RandomNumberConsumer",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/midmoussi/Documents/recovery-wallet/social-recovery-wallets/soc-rec-wallets/src/contracts/Random.sol\":\"RandomNumberConsumer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/midmoussi/Documents/recovery-wallet/social-recovery-wallets/soc-rec-wallets/src/contracts/Random.sol\":{\"keccak256\":\"0x556ba7c5f9542d870e9c08f80915f7b24f03732a7cd70791268614d2a717826f\",\"urls\":[\"bzz-raw://39b7f91032746decddd777eb51218ddf16be9d920f0dd30a487a37ff9abcfe65\",\"dweb:/ipfs/QmbGZEBGBnwDBaPJJ1sFK78surx7UDAiaRnnukwfuaJPJR\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603e80601d6000396000f3fe6080604052600080fdfea265627a7a72315820f5ec19941ab2576932bcd65808b5ad04e4daeeceeab0ad57f915be50f59d063864736f6c63430005100032",
  "deployedBytecode": "0x6080604052600080fdfea265627a7a72315820f5ec19941ab2576932bcd65808b5ad04e4daeeceeab0ad57f915be50f59d063864736f6c63430005100032",
  "sourceMap": "510:1717:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;510:1717:4;;;;;;;",
  "deployedSourceMap": "510:1717:4:-;;;;;",
  "source": "/** This example code is designed to quickly deploy an example contract using Remix.\n *  If you have never used Remix, try our example walkthrough: https://docs.chain.link/docs/example-walkthrough\n *  You will need testnet ETH and LINK.\n *     - Kovan ETH faucet: https://faucet.kovan.network/\n *     - Kovan LINK faucet: https://kovan.chain.link/\n */\n\npragma solidity >=0.5.0 <0.8.0;\n\n//import \"https://raw.githubusercontent.com/smartcontractkit/chainlink/master/evm-contracts/src/v0.6/VRFConsumerBase.sol\";\n\ncontract RandomNumberConsumer {//is VRFConsumerBase {\n   /* \n    bytes32 internal keyHash;\n    uint256 internal fee;\n    \n    uint256 public randomResult;\n    \n    /**\n     * Constructor inherits VRFConsumerBase\n     * \n     * Network: Kovan\n     * Chainlink VRF Coordinator address: 0xdD3782915140c8f3b190B5D67eAc6dc5760C46E9\n     * LINK token address:                0xa36085F69e2889c224210F603D836748e7dC0088\n     * Key Hash: 0x6c3699283bda56ad74f6b855546325b68d482e983852a7a82979cc4807b641f4\n     */\n   /* constructor() \n        VRFConsumerBase(\n            0xdD3782915140c8f3b190B5D67eAc6dc5760C46E9, // VRF Coordinator\n            0xa36085F69e2889c224210F603D836748e7dC0088  // LINK Token\n        ) public\n    {\n        keyHash = 0x6c3699283bda56ad74f6b855546325b68d482e983852a7a82979cc4807b641f4;\n        fee = 0.1 * 10 ** 18; // 0.1 LINK\n    }\n    \n    /** \n     * Requests randomness from a user-provided seed\n     */\n   /* function getRandomNumber(uint256 userProvidedSeed) public returns (bytes32 requestId) {\n        require(LINK.balanceOf(address(this)) > fee, \"Not enough LINK - fill contract with faucet\");\n        return requestRandomness(keyHash, fee, userProvidedSeed);\n    }\n\n    /**\n     * Callback function used by VRF Coordinator\n     */\n   /* function fulfillRandomness(bytes32 requestId, uint256 randomness) internal {\n        randomResult = randomness;\n    }\n    \n    /**\n     * Withdraw LINK from this contract\n     * \n     * DO NOT USE THIS IN PRODUCTION AS IT CAN BE CALLED BY ANY ADDRESS.\n     * THIS IS PURELY FOR EXAMPLE PURPOSES.\n     */\n  /*  function withdrawLink() external {\n        require(LINK.transfer(msg.sender, LINK.balanceOf(address(this))), \"Unable to transfer\");\n    }*/\n}",
  "sourcePath": "/Users/midmoussi/Documents/recovery-wallet/social-recovery-wallets/soc-rec-wallets/src/contracts/Random.sol",
  "ast": {
    "absolutePath": "/Users/midmoussi/Documents/recovery-wallet/social-recovery-wallets/soc-rec-wallets/src/contracts/Random.sol",
    "exportedSymbols": {
      "RandomNumberConsumer": [
        521
      ]
    },
    "id": 522,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 520,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "353:31:4"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 521,
        "linearizedBaseContracts": [
          521
        ],
        "name": "RandomNumberConsumer",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 522,
        "src": "510:1717:4"
      }
    ],
    "src": "353:1874:4"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/midmoussi/Documents/recovery-wallet/social-recovery-wallets/soc-rec-wallets/src/contracts/Random.sol",
      "exportedSymbols": {
        "RandomNumberConsumer": [
          521
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.5",
            ".0",
            "<",
            "0.8",
            ".0"
          ]
        },
        "id": 520,
        "name": "PragmaDirective",
        "src": "353:31:4"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            521
          ],
          "name": "RandomNumberConsumer",
          "nodes": [
            null
          ],
          "scope": 522
        },
        "id": 521,
        "name": "ContractDefinition",
        "src": "510:1717:4"
      }
    ],
    "id": 522,
    "name": "SourceUnit",
    "src": "353:1874:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-02-07T19:22:10.201Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}